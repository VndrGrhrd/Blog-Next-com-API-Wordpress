import Head from "next/head";
import { getFullPosts } from "./api/blogAPI";
import styles from "../styles/Home.module.css";
import { useState } from "react";

export default function HomePage({ postsObj }) {
  const categoria = postsObj.data.categories;
  const PostItem = postsObj.data.posts;

  const [idCategory, setCategory] = useState("");

  const handleChange = (event) => {
    setCategory(event.target.valeu);
    console.log(event.target.value);
  };

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>App Localhost</title>
          <meta name="description" content="Generated by create next app" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>Teste Nextjs + API GraphQL WP</h1>
          <div className={styles.grid}>
            <div>
              <select
                id="selectedCategorie"
                value={idCategory}
                onChange={handleChange}
              >
                <option data-categorie="All">Todas</option>
                {categoria.nodes.map((item) => {
                  return (
                    <option value={item.categoryId} key={item.categoryId}>
                      {item.name}
                    </option>
                  );
                })}
              </select>
            </div>
          </div>
          <div className={styles.grid}>
            {PostItem.nodes.map((post) => {
              return (
                <article key={post.postId} className={styles.postsContainer}>
                  <div>
                    <img src={post.featuredImage.node.sourceUrl}></img>
                  </div>
                  <div>
                    <h3>{post.title}</h3>
                    <p>{post.excerpt}</p>
                  </div>
                </article>
              );
            })}
          </div>
        </main>
      </div>
      {console.log(postsObj)}
    </>
  );
}

export const getStaticProps = async () => {
  const postsObj = await getFullPosts();

  return {
    props: {
      postsObj,
    },
    revalidate: 1, // In seconds
  };
};
